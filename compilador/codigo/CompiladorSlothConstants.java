/* Generated By:JavaCC: Do not edit this line. CompiladorSlothConstants.java */

/**
 * Token literal values and constants.
 * Generated by org.javacc.parser.OtherFilesGen#start()
 */
public interface CompiladorSlothConstants {

  /** End of File. */
  int EOF = 0;
  /** RegularExpression Id. */
  int LETRA = 5;
  /** RegularExpression Id. */
  int DIGITO = 6;
  /** RegularExpression Id. */
  int CARACTERE = 7;
  /** RegularExpression Id. */
  int TIPOINT = 8;
  /** RegularExpression Id. */
  int TIPODOUBLE = 9;
  /** RegularExpression Id. */
  int TIPOCHAR = 10;
  /** RegularExpression Id. */
  int TIPOSTRING = 11;
  /** RegularExpression Id. */
  int TIPOBOOLEAN = 12;
  /** RegularExpression Id. */
  int TRUE = 13;
  /** RegularExpression Id. */
  int FALSE = 14;
  /** RegularExpression Id. */
  int ENDL = 15;
  /** RegularExpression Id. */
  int EOL = 16;
  /** RegularExpression Id. */
  int ABREVET = 17;
  /** RegularExpression Id. */
  int FECHAVET = 18;
  /** RegularExpression Id. */
  int ADD = 19;
  /** RegularExpression Id. */
  int SUB = 20;
  /** RegularExpression Id. */
  int MULT = 21;
  /** RegularExpression Id. */
  int DIV = 22;
  /** RegularExpression Id. */
  int MOD = 23;
  /** RegularExpression Id. */
  int POW = 24;
  /** RegularExpression Id. */
  int PORCE = 25;
  /** RegularExpression Id. */
  int ABREPAR = 26;
  /** RegularExpression Id. */
  int FECHAPAR = 27;
  /** RegularExpression Id. */
  int PONTO = 28;
  /** RegularExpression Id. */
  int IGUAL = 29;
  /** RegularExpression Id. */
  int DIF = 30;
  /** RegularExpression Id. */
  int MAIOR = 31;
  /** RegularExpression Id. */
  int MENOR = 32;
  /** RegularExpression Id. */
  int MAIGUAL = 33;
  /** RegularExpression Id. */
  int MEIGUAL = 34;
  /** RegularExpression Id. */
  int IGUALDADE = 35;
  /** RegularExpression Id. */
  int AND = 36;
  /** RegularExpression Id. */
  int OR = 37;
  /** RegularExpression Id. */
  int NOT = 38;
  /** RegularExpression Id. */
  int XOR = 39;
  /** RegularExpression Id. */
  int IF = 40;
  /** RegularExpression Id. */
  int ELSE = 41;
  /** RegularExpression Id. */
  int FOR = 42;
  /** RegularExpression Id. */
  int WHILE = 43;
  /** RegularExpression Id. */
  int FOREACH = 44;
  /** RegularExpression Id. */
  int FIRST = 45;
  /** RegularExpression Id. */
  int LAST = 46;
  /** RegularExpression Id. */
  int BEGIN = 47;
  /** RegularExpression Id. */
  int END = 48;
  /** RegularExpression Id. */
  int IMPORT = 49;
  /** RegularExpression Id. */
  int GET = 50;
  /** RegularExpression Id. */
  int WRITE = 51;
  /** RegularExpression Id. */
  int STRING = 52;
  /** RegularExpression Id. */
  int INTEIRO = 53;
  /** RegularExpression Id. */
  int CARACTER = 54;
  /** RegularExpression Id. */
  int REAL = 55;
  /** RegularExpression Id. */
  int PORCENTAGEM = 56;

  /** Lexical state. */
  int DEFAULT = 0;

  /** Literal token values. */
  String[] tokenImage = {
    "<EOF>",
    "\" \"",
    "\"\\n\"",
    "\"\\r\"",
    "\"\\r\\n\"",
    "<LETRA>",
    "<DIGITO>",
    "<CARACTERE>",
    "\"int\"",
    "\"double\"",
    "\"char\"",
    "\"string\"",
    "\"boolean\"",
    "\"true\"",
    "\"false\"",
    "\"\\\\n\"",
    "\";\"",
    "\"[\"",
    "\"]\"",
    "\"+\"",
    "\"-\"",
    "\"*\"",
    "\"/\"",
    "\"//\"",
    "\"^\"",
    "\"%\"",
    "\"(\"",
    "\")\"",
    "\".\"",
    "\"==\"",
    "\"=!\"",
    "\">\"",
    "\"<\"",
    "\"=>\"",
    "\"=<\"",
    "\"=\"",
    "\"&&\"",
    "\"||\"",
    "\"!\"",
    "\"|+\"",
    "\"when\"",
    "\"otherwise\"",
    "\"for\"",
    "\"while\"",
    "\"foreach\"",
    "\"first\"",
    "\"last\"",
    "\"begin\"",
    "\"end\"",
    "\"import\"",
    "\"get\"",
    "\"write\"",
    "<STRING>",
    "<INTEIRO>",
    "<CARACTER>",
    "<REAL>",
    "<PORCENTAGEM>",
  };

}
